302c302
<      &          ,mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv   ) ! MSG  (modified z_0)
---
>      &                                                             )
624c624
<    INTEGER, INTENT(IN )::   ISFFLX,mod_sfc_exch_coef
---
>    INTEGER, INTENT(IN )::   ISFFLX
715d714
<    REAL, DIMENSION( ims:ime, jms:jme ) , INTENT(IN)::   hs_wv,dir_wv,tpeak_wv,wlen_wv
1438a1438
>      
1456c1456
< 
---
>      
2070,2092c2070,2088
< !         IF ( FRACTIONAL_SEAICE == 1 ) THEN
< !            CALL SFCLAYREV_SEAICE_WRAPPER(u_phytmp,v_phytmp,t_phy,qv_curr,&
< !                 p_phy,dz8w,cp,g,rcp,r_d,xlv,psfc,chs,chs2,cqs2,cpm, &
< !                 znt,ust,pblh,mavail,zol,mol,regime,psim,psih,fm,fhh, &
< !                 xland,hfx,qfx,lh,tsk,flhc,flqc,qgh,qsfc,rmol,       &
< !                 u10,v10,th2,t2,q2,                                  &
< !                 gz1oz0,wspd,br,isfflx,dx,                           &
< !                 svp1,svp2,svp3,svpt0,ep_1,ep_2,karman,eomeg,stbolt, &
< !                 P1000mb,                                            &
< !                 XICE,SST,TSK_SEA,                                                  &
< !                 CHS2_SEA,CHS_SEA,CPM_SEA,CQS2_SEA,FLHC_SEA,FLQC_SEA,               &
< !                 HFX_SEA,LH_SEA,QFX_SEA,QGH_SEA,QSFC_SEA,ZNT_SEA,                   &
< !                 ITIMESTEP,TICE2TSK_IF2COLD,XICE_THRESHOLD,                         &
< !                 ids,ide, jds,jde, kds,kde,                          &
< !                 ims,ime, jms,jme, kms,kme,                          &
< !                 i_start(ij),i_end(ij), j_start(ij),j_end(ij), kts,kte,    &
< !                 ustm,ck,cka,cd,cda,isftcflx,iz0tlnd,                &
< !                 sf_surface_physics, &
< !                 mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv  )
< !         ELSE
<            IF ((sst_update .EQ. 0) .and. (mod_sfc_exch_coef .GT. 0)) THEN
<                 CALL wrf_error_fatal('Cannot have mod_sfc_exch_coef greater than 0 and sst_update=0')
<            ENDIF
---
>          IF ( FRACTIONAL_SEAICE == 1 ) THEN
>             CALL SFCLAYREV_SEAICE_WRAPPER(u_phytmp,v_phytmp,t_phy,qv_curr,&
>                  p_phy,dz8w,cp,g,rcp,r_d,xlv,psfc,chs,chs2,cqs2,cpm, &
>                  znt,ust,pblh,mavail,zol,mol,regime,psim,psih,fm,fhh, &
>                  xland,hfx,qfx,lh,tsk,flhc,flqc,qgh,qsfc,rmol,       &
>                  u10,v10,th2,t2,q2,                                  &
>                  gz1oz0,wspd,br,isfflx,dx,                           &
>                  svp1,svp2,svp3,svpt0,ep_1,ep_2,karman,eomeg,stbolt, &
>                  P1000mb,                                            &
>                  XICE,SST,TSK_SEA,                                                  &
>                  CHS2_SEA,CHS_SEA,CPM_SEA,CQS2_SEA,FLHC_SEA,FLQC_SEA,               &
>                  HFX_SEA,LH_SEA,QFX_SEA,QGH_SEA,QSFC_SEA,ZNT_SEA,                   &
>                  ITIMESTEP,TICE2TSK_IF2COLD,XICE_THRESHOLD,                         &
>                  ids,ide, jds,jde, kds,kde,                          &
>                  ims,ime, jms,jme, kms,kme,                          &
>                  i_start(ij),i_end(ij), j_start(ij),j_end(ij), kts,kte,    &
>                  ustm,ck,cka,cd,cda,isftcflx,iz0tlnd,                &
>                  sf_surface_physics  )
>          ELSE
2104,2105c2100
<                ustm,ck,cka,cd,cda,isftcflx,iz0tlnd, scm_force_flux, &
<                mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv    )
---
>                ustm,ck,cka,cd,cda,isftcflx,iz0tlnd, scm_force_flux    )
2114c2109
< !         ENDIF
---
>          ENDIF
5658,5968c5653,5918
< !   SUBROUTINE sfclayrev_seaice_wrapper(U3D,V3D,T3D,QV3D,P3D,dz8w,     &
< !                     CP,G,ROVCP,R,XLV,PSFC,CHS,CHS2,CQS2,CPM,      &
< !                     ZNT,UST,PBLH,MAVAIL,ZOL,MOL,REGIME,PSIM,PSIH, &
< !                     FM,FH,                                        &
< !                     XLAND,HFX,QFX,LH,TSK,FLHC,FLQC,QGH,QSFC,RMOL, &
< !                     U10,V10,TH2,T2,Q2,                            &
< !                     GZ1OZ0,WSPD,BR,ISFFLX,DX,                     &
< !                     SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
< !                     KARMAN,EOMEG,STBOLT,                          &
< !                     P1000,                                      &
< !                     XICE,SST,TSK_SEA,                                                  &
< !                     CHS2_SEA,CHS_SEA,CPM_SEA,CQS2_SEA,FLHC_SEA,FLQC_SEA,               &
< !                     HFX_SEA,LH_SEA,QFX_SEA,QGH_SEA,QSFC_SEA,ZNT_SEA,                   &
< !                     ITIMESTEP,TICE2TSK_IF2COLD,XICE_THRESHOLD,                         &
< !                     ids,ide, jds,jde, kds,kde,                    &
< !                     ims,ime, jms,jme, kms,kme,                    &
< !                     its,ite, jts,jte, kts,kte,                    &
< !                     ustm,ck,cka,cd,cda,isftcflx,iz0tlnd,          &
< !                     sf_surface_physics, &
< !                     mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv                 )
< !
< !     USE module_sf_sfclayrev
< !     implicit none
< !
< !     INTEGER,  INTENT(IN )   ::        ids,ide, jds,jde, kds,kde,  &
< !                                       ims,ime, jms,jme, kms,kme,  &
< !                                       its,ite, jts,jte, kts,kte
< !
< !     INTEGER,  INTENT(IN )   ::        ISFFLX,mod_sfc_exch_coef
< !     REAL,     INTENT(IN )   ::        SVP1,SVP2,SVP3,SVPT0
< !     REAL,     INTENT(IN )   ::        EP1,EP2,KARMAN,EOMEG,STBOLT
< !     REAL,     INTENT(IN )   ::        P1000
< !
< !     REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
< !               INTENT(IN   )   ::                           dz8w
< !
< !     REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
< !               INTENT(IN   )   ::                           QV3D, &
< !                                                             P3D, &
< !                                                             T3D
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(IN   )               ::             MAVAIL, &
< !                                                            PBLH, &
< !                                                           XLAND, &
< !                                                             TSK,hs_wv,dir_wv,tpeak_wv,wlen_wv
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(OUT  )               ::                U10, &
< !                                                             V10, &
< !                                                             TH2, &
< !                                                              T2, &
< !                                                              Q2, &
< !                                                            QSFC
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(INOUT)               ::             REGIME, &
< !                                                             HFX, &
< !                                                             QFX, &
< !                                                              LH, &
< !                                                         MOL,RMOL
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(INOUT)   ::                 GZ1OZ0,WSPD,BR, &
< !                                                 PSIM,PSIH,FM,FH
< !
< !     REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
< !               INTENT(IN   )   ::                            U3D, &
< !                                                             V3D
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(IN   )               ::               PSFC
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(INOUT)   ::                            ZNT, &
< !                                                             ZOL, &
< !                                                             UST, &
< !                                                             CPM, &
< !                                                            CHS2, &
< !                                                            CQS2, &
< !                                                             CHS
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(INOUT)   ::                      FLHC,FLQC
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme )                    , &
< !               INTENT(INOUT)   ::                                 &
< !                                                              QGH
< !
< !     REAL,     INTENT(IN   )               ::   CP,G,ROVCP,R,XLV,DX
< !
< !     REAL, OPTIONAL, DIMENSION( ims:ime, jms:jme )              , &
< !               INTENT(OUT)     ::                   ck,cka,cd,cda
< !     REAL, OPTIONAL, DIMENSION( ims:ime, jms:jme )              , &
< !               INTENT(INOUT)   ::                            ustm
< !
< !     INTEGER,  OPTIONAL,  INTENT(IN )   ::     ISFTCFLX,IZ0TLND
< !
< !!--------------------------------------------------------------------
< !!    New for wrapper
< !!--------------------------------------------------------------------
< !     INTEGER,  INTENT(IN)          ::    ITIMESTEP, sf_surface_physics
< !     LOGICAL,  INTENT(IN)               ::      TICE2TSK_IF2COLD
< !     REAL,     INTENT(IN)               ::      XICE_THRESHOLD
< !     REAL,     DIMENSION( ims:ime, jms:jme ),                     &
< !               INTENT(IN)               ::      XICE
< !     REAL,     DIMENSION( ims:ime, jms:jme ),                     &
< !               INTENT(INOUT)            ::      SST
< !     REAL,     DIMENSION( ims:ime, jms:jme ),                     &
< !               INTENT(OUT)              ::      TSK_SEA,          &
< !                                                CHS2_SEA,         &
< !                                                CHS_SEA,          &
< !                                                CPM_SEA,          &
< !                                                CQS2_SEA,         &
< !                                                FLHC_SEA,         &
< !                                                FLQC_SEA,         &
< !                                                HFX_SEA,          &
< !                                                LH_SEA,           &
< !                                                QFX_SEA,          &
< !                                                QGH_SEA,          &
< !                                                QSFC_SEA,         &
< !                                                ZNT_SEA
< !
< !!--------------------------------------------------------------------
< !!    Local
< !!--------------------------------------------------------------------
< !     INTEGER :: I, J
< !     REAL,     DIMENSION( ims:ime, jms:jme ) :: XLAND_SEA,        &
< !                                                MAVAIL_sea,       &
< !                                                TSK_LOCAL,        &
< !                                                BR_HOLD,          &
< !                                                CHS2_HOLD,        &
< !                                                CHS_HOLD,         &
< !                                                CPM_HOLD,         &
< !                                                CQS2_HOLD,        &
< !                                                FLHC_HOLD,        &
< !                                                FLQC_HOLD,        &
< !                                                GZ1OZ0_HOLD,      &
< !                                                HFX_HOLD,         &
< !                                                LH_HOLD,          &
< !                                                MOL_HOLD,         &
< !                                                PSIH_HOLD,        &
< !                                                PSIM_HOLD,        &
< !                                                FH_HOLD,          &
< !                                                FM_HOLD,          &
< !                                                QFX_HOLD,         &
< !                                                QGH_HOLD,         &
< !                                                REGIME_HOLD,      &
< !                                                RMOL_HOLD,        &
< !                                                UST_HOLD,         &
< !                                                WSPD_HOLD,        &
< !                                                ZNT_HOLD,         &
< !                                                ZOL_HOLD,         &
< !                                                TH2_HOLD,         & !ssib
< !                                                T2_HOLD,          & !ssib
< !                                                Q2_HOLD,          & !ssib
< !                                                TSK_HOLD,         & !ssib
< !                                                CD_SEA,           &
< !                                                CDA_SEA,          &
< !                                                CK_SEA,           &
< !                                                CKA_SEA,          &
< !                                                Q2_SEA,           &
< !                                                T2_SEA,           &
< !                                                TH2_SEA,          &
< !                                                U10_SEA,          &
< !                                                USTM_SEA,         &
< !                                                V10_SEA
< !
< !     REAL,     DIMENSION( ims:ime, jms:jme ) ::                   &
< !                                                BR_SEA,           &
< !                                                GZ1OZ0_SEA,       &
< !                                                MOL_SEA,          &
< !                                                PSIH_SEA,         &
< !                                                PSIM_SEA,         &
< !                                                FH_SEA,           &
< !                                                FM_SEA,           &
< !                                                REGIME_SEA,       &
< !                                                RMOL_SEA,         &
< !                                                UST_SEA,          &
< !                                                WSPD_SEA,         &
< !                                                ZOL_SEA
< !
< !! INTENT(IN) to SFCLAY; unchanged by the call
< !      ! ISFFLX
< !      ! SVP1,SVP2,SVP3,SVPT0
< !      ! EP1,EP2,KARMAN,EOMEG,STBOLT
< !      ! CP,G,ROVCP,R,XLV,DX
< !      ! ISFTCFLX,IZ0TLND
< !      ! P1000
< !      ! dz8w
< !      ! QV3D
< !      ! P3D
< !      ! T3D
< !      ! MAVAIL
< !      ! PBLH
< !      ! XLAND
< !      ! TSK
< !      ! U3D
< !      ! V3D
< !      ! PSFC
< !
< !     CALL get_local_ice_tsk( ims, ime, jms, jme, its, ite, jts, jte,  &
< !                             itimestep, .true., tice2tsk_if2cold,     &
< !                             XICE, XICE_THRESHOLD,                    &
< !                             SST, TSK, TSK_SEA, TSK_LOCAL )
< !
< !
< !! INTENT (INOUT) to SFCLAY:  Save the variables before the first call
< !! (for land/frozen water) to SFCLAY, to keep from double-counting the
< !! effects of that routine
< !     BR_HOLD   = BR
< !     CHS2_HOLD = CHS2
< !     CHS_HOLD  = CHS
< !     CPM_HOLD  = CPM
< !     CQS2_HOLD = CQS2
< !     FLHC_HOLD = FLHC
< !     FLQC_HOLD = FLQC
< !     GZ1OZ0_HOLD = GZ1OZ0
< !     HFX_HOLD  = HFX
< !     LH_HOLD   = LH
< !     MOL_HOLD  = MOL
< !     PSIH_HOLD = PSIH
< !     PSIM_HOLD = PSIM
< !     FH_HOLD   = FH
< !     FM_HOLD   = FM
< !     QFX_HOLD  = QFX
< !     QGH_HOLD  = QGH
< !     REGIME_HOLD = REGIME
< !     RMOL_HOLD = RMOL
< !     UST_HOLD  = UST
< !     WSPD_HOLD = WSPD
< !     ZNT_HOLD  = ZNT
< !     ZOL_HOLD  = ZOL
< !!also save these variables for SSIB (fds 12/2010)
< !     TH2_HOLD = TH2
< !     T2_HOLD = T2
< !     Q2_HOLD = Q2
< !     TSK_HOLD = TSK
< !     
< !! INTENT(OUT) from SFCLAY.  Input shouldn't matter, but we'll want to
< !! keep things around for weighting after the second call to SFCLAY.
< !     ! CD
< !     ! CDA
< !     ! CK
< !     ! CKA
< !     ! Q2
< !     ! QSFC
< !     ! T2
< !     ! TH2
< !     ! U10
< !     ! USTM
< !     ! V10
< !
< !
< !     ! land/frozen-water call
< !     call sfclayrev(U3D,V3D,T3D,QV3D,P3D,dz8w,                    & ! I
< !                 CP,G,ROVCP,R,XLV,PSFC,CHS,CHS2,CQS2,CPM,      & ! I,I,I,I,I,I,IO,IO,IO,IO,
< !                 ZNT,UST,PBLH,MAVAIL,ZOL,MOL,REGIME,PSIM,PSIH, &
< !                 FM,FH,                                        &
< !                 XLAND,HFX,QFX,LH,TSK_LOCAL,FLHC,FLQC,QGH,QSFC,RMOL, &
< !                 U10,V10,TH2,T2,Q2,                            &
< !                 GZ1OZ0,WSPD,BR,ISFFLX,DX,                     &
< !                 SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
< !                 KARMAN,EOMEG,STBOLT,                          &
< !                 P1000,                                      &
< !                 ids,ide, jds,jde, kds,kde,                    &
< !                 ims,ime, jms,jme, kms,kme,                    &
< !                 its,ite, jts,jte, kts,kte,                    &
< !                 ustm,ck,cka,cd,cda,isftcflx,iz0tlnd, &
< !                 mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv  )
< !!
< !!Restore land-point values calculated by SSiB (fds 12/2010)
< !     IF (itimestep .gt. 1 .and. sf_surface_physics .EQ. 8) then
< !     DO j = JTS , JTE
< !        DO i = ITS, ITE
< !           IF ( XLAND(I,J) .LT. 1.5 ) THEN
< !              BR(I,J) = BR_HOLD(I,J)
< !              TH2(I,J) = TH2_HOLD(I,J)
< !              T2(I,J) = T2_HOLD(I,J)
< !              Q2(I,J) = Q2_HOLD(I,J)
< !              HFX(I,J) = HFX_HOLD(I,J)
< !              QFX(I,J) = QFX_HOLD(I,J)
< !              LH(I,J) = LH_HOLD(I,J)
< !              GZ1OZ0(I,J) = GZ1OZ0_HOLD(I,J)
< !              WSPD(I,J) = WSPD_HOLD(I,J)
< !              ZNT(I,J) = ZNT_HOLD(I,J)
< !              UST(I,J) = UST_HOLD(I,J)
< !!             TSK(I,J) = TSK_HOLD(I,J)
< !           ENDIF
< !        ENDDO
< !     ENDDO
< !     ENDIF
< !!
< !     ! Set up for open-water call
< !     DO j = JTS , JTE
< !        DO i = ITS , ITE
< !           IF ( ( XICE(I,J) .GE. XICE_THRESHOLD ) .and. ( XICE(i,j) .LE. 1.0 ) ) THEN
< !              XLAND_SEA(i,j)=2.
< !              MAVAIL_SEA(I,J)  =1.
< !              ZNT_SEA(I,J) = 0.0001
< !              TSK_SEA(i,j) = SST(i,j)
< !              IF ( SST(i,j) .LT. 271.4 ) THEN
< !                 SST(i,j) = 271.4
< !                 TSK_SEA(i,j) = SST(i,j)
< !              ENDIF
< !           ELSE
< !              XLAND_SEA(i,j) = XLAND(i,j)
< !              MAVAIL_SEA(i,j) = MAVAIL(i,j)
< !              ZNT_SEA(i,j)  = ZNT_HOLD(i,j)
< !              TSK_SEA(i,j) = TSK_LOCAL(i,j)
< !           ENDIF
< !        ENDDO
< !     ENDDO
---
>    SUBROUTINE sfclayrev_seaice_wrapper(U3D,V3D,T3D,QV3D,P3D,dz8w,     &
>                      CP,G,ROVCP,R,XLV,PSFC,CHS,CHS2,CQS2,CPM,      &
>                      ZNT,UST,PBLH,MAVAIL,ZOL,MOL,REGIME,PSIM,PSIH, &
>                      FM,FH,                                        &
>                      XLAND,HFX,QFX,LH,TSK,FLHC,FLQC,QGH,QSFC,RMOL, &
>                      U10,V10,TH2,T2,Q2,                            &
>                      GZ1OZ0,WSPD,BR,ISFFLX,DX,                     &
>                      SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
>                      KARMAN,EOMEG,STBOLT,                          &
>                      P1000,                                      &
>                      XICE,SST,TSK_SEA,                                                  &
>                      CHS2_SEA,CHS_SEA,CPM_SEA,CQS2_SEA,FLHC_SEA,FLQC_SEA,               &
>                      HFX_SEA,LH_SEA,QFX_SEA,QGH_SEA,QSFC_SEA,ZNT_SEA,                   &
>                      ITIMESTEP,TICE2TSK_IF2COLD,XICE_THRESHOLD,                         &
>                      ids,ide, jds,jde, kds,kde,                    &
>                      ims,ime, jms,jme, kms,kme,                    &
>                      its,ite, jts,jte, kts,kte,                    &
>                      ustm,ck,cka,cd,cda,isftcflx,iz0tlnd,          &
>                      sf_surface_physics                             )
> 
>      USE module_sf_sfclayrev
>      implicit none
> 
>      INTEGER,  INTENT(IN )   ::        ids,ide, jds,jde, kds,kde,  &
>                                        ims,ime, jms,jme, kms,kme,  &
>                                        its,ite, jts,jte, kts,kte
> 
>      INTEGER,  INTENT(IN )   ::        ISFFLX
>      REAL,     INTENT(IN )   ::        SVP1,SVP2,SVP3,SVPT0
>      REAL,     INTENT(IN )   ::        EP1,EP2,KARMAN,EOMEG,STBOLT
>      REAL,     INTENT(IN )   ::        P1000
> 
>      REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
>                INTENT(IN   )   ::                           dz8w
> 
>      REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
>                INTENT(IN   )   ::                           QV3D, &
>                                                              P3D, &
>                                                              T3D
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(IN   )               ::             MAVAIL, &
>                                                             PBLH, &
>                                                            XLAND, &
>                                                              TSK
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(OUT  )               ::                U10, &
>                                                              V10, &
>                                                              TH2, &
>                                                               T2, &
>                                                               Q2, &
>                                                             QSFC
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(INOUT)               ::             REGIME, &
>                                                              HFX, &
>                                                              QFX, &
>                                                               LH, &
>                                                          MOL,RMOL
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(INOUT)   ::                 GZ1OZ0,WSPD,BR, &
>                                                  PSIM,PSIH,FM,FH
> 
>      REAL,     DIMENSION( ims:ime, kms:kme, jms:jme )           , &
>                INTENT(IN   )   ::                            U3D, &
>                                                              V3D
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(IN   )               ::               PSFC
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(INOUT)   ::                            ZNT, &
>                                                              ZOL, &
>                                                              UST, &
>                                                              CPM, &
>                                                             CHS2, &
>                                                             CQS2, &
>                                                              CHS
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(INOUT)   ::                      FLHC,FLQC
> 
>      REAL,     DIMENSION( ims:ime, jms:jme )                    , &
>                INTENT(INOUT)   ::                                 &
>                                                               QGH
> 
>      REAL,     INTENT(IN   )               ::   CP,G,ROVCP,R,XLV,DX
> 
>      REAL, OPTIONAL, DIMENSION( ims:ime, jms:jme )              , &
>                INTENT(OUT)     ::                   ck,cka,cd,cda
>      REAL, OPTIONAL, DIMENSION( ims:ime, jms:jme )              , &
>                INTENT(INOUT)   ::                            ustm
> 
>      INTEGER,  OPTIONAL,  INTENT(IN )   ::     ISFTCFLX,IZ0TLND
> 
> !--------------------------------------------------------------------
> !    New for wrapper
> !--------------------------------------------------------------------
>      INTEGER,  INTENT(IN)          ::    ITIMESTEP, sf_surface_physics
>      LOGICAL,  INTENT(IN)               ::      TICE2TSK_IF2COLD
>      REAL,     INTENT(IN)               ::      XICE_THRESHOLD
>      REAL,     DIMENSION( ims:ime, jms:jme ),                     &
>                INTENT(IN)               ::      XICE
>      REAL,     DIMENSION( ims:ime, jms:jme ),                     &
>                INTENT(INOUT)            ::      SST
>      REAL,     DIMENSION( ims:ime, jms:jme ),                     &
>                INTENT(OUT)              ::      TSK_SEA,          &
>                                                 CHS2_SEA,         &
>                                                 CHS_SEA,          &
>                                                 CPM_SEA,          &
>                                                 CQS2_SEA,         &
>                                                 FLHC_SEA,         &
>                                                 FLQC_SEA,         &
>                                                 HFX_SEA,          &
>                                                 LH_SEA,           &
>                                                 QFX_SEA,          &
>                                                 QGH_SEA,          &
>                                                 QSFC_SEA,         &
>                                                 ZNT_SEA
> 
> !--------------------------------------------------------------------
> !    Local
> !--------------------------------------------------------------------
>      INTEGER :: I, J
>      REAL,     DIMENSION( ims:ime, jms:jme ) :: XLAND_SEA,        &
>                                                 MAVAIL_sea,       &
>                                                 TSK_LOCAL,        &
>                                                 BR_HOLD,          &
>                                                 CHS2_HOLD,        &
>                                                 CHS_HOLD,         &
>                                                 CPM_HOLD,         &
>                                                 CQS2_HOLD,        &
>                                                 FLHC_HOLD,        &
>                                                 FLQC_HOLD,        &
>                                                 GZ1OZ0_HOLD,      &
>                                                 HFX_HOLD,         &
>                                                 LH_HOLD,          &
>                                                 MOL_HOLD,         &
>                                                 PSIH_HOLD,        &
>                                                 PSIM_HOLD,        &
>                                                 FH_HOLD,          &
>                                                 FM_HOLD,          &
>                                                 QFX_HOLD,         &
>                                                 QGH_HOLD,         &
>                                                 REGIME_HOLD,      &
>                                                 RMOL_HOLD,        &
>                                                 UST_HOLD,         &
>                                                 WSPD_HOLD,        &
>                                                 ZNT_HOLD,         &
>                                                 ZOL_HOLD,         &
>                                                 TH2_HOLD,         & !ssib
>                                                 T2_HOLD,          & !ssib
>                                                 Q2_HOLD,          & !ssib
>                                                 TSK_HOLD,         & !ssib
>                                                 CD_SEA,           &
>                                                 CDA_SEA,          &
>                                                 CK_SEA,           &
>                                                 CKA_SEA,          &
>                                                 Q2_SEA,           &
>                                                 T2_SEA,           &
>                                                 TH2_SEA,          &
>                                                 U10_SEA,          &
>                                                 USTM_SEA,         &
>                                                 V10_SEA
> 
>      REAL,     DIMENSION( ims:ime, jms:jme ) ::                   &
>                                                 BR_SEA,           &
>                                                 GZ1OZ0_SEA,       &
>                                                 MOL_SEA,          &
>                                                 PSIH_SEA,         &
>                                                 PSIM_SEA,         &
>                                                 FH_SEA,           &
>                                                 FM_SEA,           &
>                                                 REGIME_SEA,       &
>                                                 RMOL_SEA,         &
>                                                 UST_SEA,          &
>                                                 WSPD_SEA,         &
>                                                 ZOL_SEA
> 
> ! INTENT(IN) to SFCLAY; unchanged by the call
>       ! ISFFLX
>       ! SVP1,SVP2,SVP3,SVPT0
>       ! EP1,EP2,KARMAN,EOMEG,STBOLT
>       ! CP,G,ROVCP,R,XLV,DX
>       ! ISFTCFLX,IZ0TLND
>       ! P1000
>       ! dz8w
>       ! QV3D
>       ! P3D
>       ! T3D
>       ! MAVAIL
>       ! PBLH
>       ! XLAND
>       ! TSK
>       ! U3D
>       ! V3D
>       ! PSFC
> 
>      CALL get_local_ice_tsk( ims, ime, jms, jme, its, ite, jts, jte,  &
>                              itimestep, .true., tice2tsk_if2cold,     &
>                              XICE, XICE_THRESHOLD,                    &
>                              SST, TSK, TSK_SEA, TSK_LOCAL )
> 
> 
> ! INTENT (INOUT) to SFCLAY:  Save the variables before the first call
> ! (for land/frozen water) to SFCLAY, to keep from double-counting the
> ! effects of that routine
>      BR_HOLD   = BR
>      CHS2_HOLD = CHS2
>      CHS_HOLD  = CHS
>      CPM_HOLD  = CPM
>      CQS2_HOLD = CQS2
>      FLHC_HOLD = FLHC
>      FLQC_HOLD = FLQC
>      GZ1OZ0_HOLD = GZ1OZ0
>      HFX_HOLD  = HFX
>      LH_HOLD   = LH
>      MOL_HOLD  = MOL
>      PSIH_HOLD = PSIH
>      PSIM_HOLD = PSIM
>      FH_HOLD   = FH
>      FM_HOLD   = FM
>      QFX_HOLD  = QFX
>      QGH_HOLD  = QGH
>      REGIME_HOLD = REGIME
>      RMOL_HOLD = RMOL
>      UST_HOLD  = UST
>      WSPD_HOLD = WSPD
>      ZNT_HOLD  = ZNT
>      ZOL_HOLD  = ZOL
> !also save these variables for SSIB (fds 12/2010)
>      TH2_HOLD = TH2
>      T2_HOLD = T2
>      Q2_HOLD = Q2
>      TSK_HOLD = TSK
>      
> ! INTENT(OUT) from SFCLAY.  Input shouldn't matter, but we'll want to
> ! keep things around for weighting after the second call to SFCLAY.
>      ! CD
>      ! CDA
>      ! CK
>      ! CKA
>      ! Q2
>      ! QSFC
>      ! T2
>      ! TH2
>      ! U10
>      ! USTM
>      ! V10
> 
> 
>      ! land/frozen-water call
>      call sfclayrev(U3D,V3D,T3D,QV3D,P3D,dz8w,                    & ! I
>                  CP,G,ROVCP,R,XLV,PSFC,CHS,CHS2,CQS2,CPM,      & ! I,I,I,I,I,I,IO,IO,IO,IO,
>                  ZNT,UST,PBLH,MAVAIL,ZOL,MOL,REGIME,PSIM,PSIH, &
>                  FM,FH,                                        &
>                  XLAND,HFX,QFX,LH,TSK_LOCAL,FLHC,FLQC,QGH,QSFC,RMOL, &
>                  U10,V10,TH2,T2,Q2,                            &
>                  GZ1OZ0,WSPD,BR,ISFFLX,DX,                     &
>                  SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
>                  KARMAN,EOMEG,STBOLT,                          &
>                  P1000,                                      &
>                  ids,ide, jds,jde, kds,kde,                    &
>                  ims,ime, jms,jme, kms,kme,                    &
>                  its,ite, jts,jte, kts,kte,                    &
>                  ustm,ck,cka,cd,cda,isftcflx,iz0tlnd           )
5970,6072c5920,6064
< !     ! Restore the values from before the land/frozen-water call
< !     BR_SEA   = BR_HOLD
< !     CHS2_SEA = CHS2_HOLD
< !     CHS_SEA  = CHS_HOLD
< !     CPM_SEA  = CPM_HOLD
< !     CQS2_SEA = CQS2_HOLD
< !     FLHC_SEA = FLHC_HOLD
< !     FLQC_SEA = FLQC_HOLD
< !     GZ1OZ0_SEA = GZ1OZ0_HOLD
< !     HFX_SEA  = HFX_HOLD
< !     LH_SEA   = LH_HOLD
< !     MOL_SEA  = MOL_HOLD
< !     PSIH_SEA = PSIH_HOLD
< !     PSIM_SEA = PSIM_HOLD
< !     FH_SEA   = FH_HOLD
< !     FM_SEA   = FM_HOLD
< !     QFX_SEA  = QFX_HOLD
< !     QGH_SEA  = QGH_HOLD
< !     REGIME_SEA = REGIME_HOLD
< !     RMOL_SEA = RMOL_HOLD
< !     UST_SEA  = UST_HOLD
< !     WSPD_SEA = WSPD_HOLD
< !     ZOL_SEA  = ZOL_HOLD
< !!
< !     ! open-water call
< !     call sfclayrev(U3D,V3D,T3D,QV3D,P3D,dz8w,                    & ! I
< !                 CP,G,ROVCP,R,XLV,PSFC,                        & ! I
< !                 CHS_SEA,CHS2_SEA,CQS2_SEA,CPM_SEA,            & ! I/O
< !                 ZNT_SEA,UST_SEA,                              & ! I/O
< !                 PBLH,MAVAIL_SEA,                              & ! I
< !                 ZOL_SEA,MOL_SEA,REGIME_SEA,PSIM_SEA,PSIH_SEA, & ! I/O
< !                 FM_SEA,FH_SEA,                                &
< !                 XLAND_SEA,                              & ! I
< !                 HFX_SEA,QFX_SEA,LH_SEA,                       & ! I/O
< !                 TSK_SEA,                                      & ! I
< !                 FLHC_SEA,FLQC_SEA,QGH_SEA,QSFC_sea,RMOL_SEA,  & ! I/O
< !                 U10_sea,V10_sea,TH2_sea,T2_sea,Q2_sea,        & ! O
< !                 GZ1OZ0_SEA,WSPD_SEA,BR_SEA,                   & ! I/O
< !                 ISFFLX,DX,                                    &
< !                 SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
< !                 KARMAN,EOMEG,STBOLT,                          &
< !                 P1000,                                      &
< !                 ids,ide, jds,jde, kds,kde,                    &
< !                 ims,ime, jms,jme, kms,kme,                    &
< !                 its,ite, jts,jte, kts,kte,                    & ! 0
< !                 ustm_sea,ck_sea,cka_sea,cd_sea,cda_sea,isftcflx,iz0tlnd, & 
< !                 mod_sfc_exch_coef,hs_wv,dir_wv,tpeak_wv,wlen_wv )
< !!
< !     DO j = JTS , JTE
< !        DO i = ITS, ITE
< !           IF ( ( XICE(I,J) .GE. XICE_THRESHOLD )  .and.( XICE(i,j) .LE. 1.0 ) ) THEN
< !              ! weighted average for sea ice points
< !              br(i,j)     = ( br(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * br_sea(i,j)     )
< !              ! CHS2 -- wait
< !              ! CHS  -- wait
< !              ! CPM  -- wait
< !              ! CQS2 -- wait
< !              ! FLHC -- wait
< !              ! FLQC -- wait
< !              gz1oz0(i,j) = ( gz1oz0(i,j) * XICE(i,j) ) + ( (1.0-XICE(i,j)) * gz1oz0_sea(i,j) )
< !              ! HFX  -- wait
< !              ! LH   -- wait
< !              mol(i,j)    = ( mol(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * mol_sea(i,j)    )
< !              psih(i,j)   = ( psih(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * psih_sea(i,j)   )
< !              psim(i,j)   = ( psim(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * psim_sea(i,j)   )
< !              fh(i,j)    = ( fh(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * fh_sea(i,j)   )
< !              fm(i,j)    = ( fm(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * fm_sea(i,j)   )
< !              ! QFX  -- wait
< !              ! QGH  -- wait
< !              if ( XICE(i,j).GE. 0.5 ) regime(i,j) = regime_hold(i,j)
< !              rmol(i,j)   = ( rmol(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * rmol_sea(i,j)   )
< !              ust(i,j)    = ( ust(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * ust_sea(i,j)    )
< !              wspd(i,j)   = ( wspd(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * wspd_sea(i,j)   )
< !              zol(i,j)    = ( zol(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * zol_sea(i,j)    )
< !              ! INTENT(OUT) --------------------------------------------------------------------
< !              IF ( PRESENT ( CD ) ) THEN
< !                 CD(i,j)     = ( CD(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CD_sea(i,j)     )
< !              ENDIF
< !              IF ( PRESENT ( CDA ) ) THEN
< !                 CDA(i,j)     = ( CDA(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CDA_sea(i,j)     )
< !              ENDIF
< !              IF ( PRESENT ( CK ) ) THEN
< !                 CK(i,j)     = ( CK(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CK_sea(i,j)     )
< !              ENDIF
< !              IF ( PRESENT ( CKA ) ) THEN
< !                 CKA(i,j)     = ( CKA(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CKA_sea(i,j)     )
< !              ENDIF
< !              q2(i,j)     = ( q2(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * q2_sea(i,j)     )
< !              ! QSFC -- wait
< !              t2(i,j)     = ( t2(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * t2_sea(i,j)     )
< !              th2(i,j)    = ( th2(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * th2_sea(i,j)    )
< !              u10(i,j)    = ( u10(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * u10_sea(i,j)    )
< !              IF ( PRESENT ( USTM ) ) THEN
< !                 USTM(i,j)    = ( USTM(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * USTM_sea(i,j)    )
< !              ENDIF
< !              v10(i,j)    = ( v10(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * v10_sea(i,j)    )
< !           ENDIF
< !        END DO
< !     END DO
< !!
< !!         tsk(i,j) = tsk(i,j)*XICE(i,j) + (1.0-XICE(i,j))*TSK_SEA(i,j)
< !!
< !   END SUBROUTINE sfclayrev_seaice_wrapper
---
> !Restore land-point values calculated by SSiB (fds 12/2010)
>      IF (itimestep .gt. 1 .and. sf_surface_physics .EQ. 8) then
>      DO j = JTS , JTE
>         DO i = ITS, ITE
>            IF ( XLAND(I,J) .LT. 1.5 ) THEN
>               BR(I,J) = BR_HOLD(I,J)
>               TH2(I,J) = TH2_HOLD(I,J)
>               T2(I,J) = T2_HOLD(I,J)
>               Q2(I,J) = Q2_HOLD(I,J)
>               HFX(I,J) = HFX_HOLD(I,J)
>               QFX(I,J) = QFX_HOLD(I,J)
>               LH(I,J) = LH_HOLD(I,J)
>               GZ1OZ0(I,J) = GZ1OZ0_HOLD(I,J)
>               WSPD(I,J) = WSPD_HOLD(I,J)
>               ZNT(I,J) = ZNT_HOLD(I,J)
>               UST(I,J) = UST_HOLD(I,J)
> !             TSK(I,J) = TSK_HOLD(I,J)
>            ENDIF
>         ENDDO
>      ENDDO
>      ENDIF
> !
>      ! Set up for open-water call
>      DO j = JTS , JTE
>         DO i = ITS , ITE
>            IF ( ( XICE(I,J) .GE. XICE_THRESHOLD ) .and. ( XICE(i,j) .LE. 1.0 ) ) THEN
>               XLAND_SEA(i,j)=2.
>               MAVAIL_SEA(I,J)  =1.
>               ZNT_SEA(I,J) = 0.0001
>               TSK_SEA(i,j) = SST(i,j)
>               IF ( SST(i,j) .LT. 271.4 ) THEN
>                  SST(i,j) = 271.4
>                  TSK_SEA(i,j) = SST(i,j)
>               ENDIF
>            ELSE
>               XLAND_SEA(i,j) = XLAND(i,j)
>               MAVAIL_SEA(i,j) = MAVAIL(i,j)
>               ZNT_SEA(i,j)  = ZNT_HOLD(i,j)
>               TSK_SEA(i,j) = TSK_LOCAL(i,j)
>            ENDIF
>         ENDDO
>      ENDDO
> 
>      ! Restore the values from before the land/frozen-water call
>      BR_SEA   = BR_HOLD
>      CHS2_SEA = CHS2_HOLD
>      CHS_SEA  = CHS_HOLD
>      CPM_SEA  = CPM_HOLD
>      CQS2_SEA = CQS2_HOLD
>      FLHC_SEA = FLHC_HOLD
>      FLQC_SEA = FLQC_HOLD
>      GZ1OZ0_SEA = GZ1OZ0_HOLD
>      HFX_SEA  = HFX_HOLD
>      LH_SEA   = LH_HOLD
>      MOL_SEA  = MOL_HOLD
>      PSIH_SEA = PSIH_HOLD
>      PSIM_SEA = PSIM_HOLD
>      FH_SEA   = FH_HOLD
>      FM_SEA   = FM_HOLD
>      QFX_SEA  = QFX_HOLD
>      QGH_SEA  = QGH_HOLD
>      REGIME_SEA = REGIME_HOLD
>      RMOL_SEA = RMOL_HOLD
>      UST_SEA  = UST_HOLD
>      WSPD_SEA = WSPD_HOLD
>      ZOL_SEA  = ZOL_HOLD
> !
>      ! open-water call
>      call sfclayrev(U3D,V3D,T3D,QV3D,P3D,dz8w,                    & ! I
>                  CP,G,ROVCP,R,XLV,PSFC,                        & ! I
>                  CHS_SEA,CHS2_SEA,CQS2_SEA,CPM_SEA,            & ! I/O
>                  ZNT_SEA,UST_SEA,                              & ! I/O
>                  PBLH,MAVAIL_SEA,                              & ! I
>                  ZOL_SEA,MOL_SEA,REGIME_SEA,PSIM_SEA,PSIH_SEA, & ! I/O
>                  FM_SEA,FH_SEA,                                &
>                  XLAND_SEA,                              & ! I
>                  HFX_SEA,QFX_SEA,LH_SEA,                       & ! I/O
>                  TSK_SEA,                                      & ! I
>                  FLHC_SEA,FLQC_SEA,QGH_SEA,QSFC_sea,RMOL_SEA,  & ! I/O
>                  U10_sea,V10_sea,TH2_sea,T2_sea,Q2_sea,        & ! O
>                  GZ1OZ0_SEA,WSPD_SEA,BR_SEA,                   & ! I/O
>                  ISFFLX,DX,                                    &
>                  SVP1,SVP2,SVP3,SVPT0,EP1,EP2,                 &
>                  KARMAN,EOMEG,STBOLT,                          &
>                  P1000,                                      &
>                  ids,ide, jds,jde, kds,kde,                    &
>                  ims,ime, jms,jme, kms,kme,                    &
>                  its,ite, jts,jte, kts,kte,                    & ! 0
>                  ustm_sea,ck_sea,cka_sea,cd_sea,cda_sea,isftcflx,iz0tlnd )
> !
>      DO j = JTS , JTE
>         DO i = ITS, ITE
>            IF ( ( XICE(I,J) .GE. XICE_THRESHOLD )  .and.( XICE(i,j) .LE. 1.0 ) ) THEN
>               ! weighted average for sea ice points
>               br(i,j)     = ( br(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * br_sea(i,j)     )
>               ! CHS2 -- wait
>               ! CHS  -- wait
>               ! CPM  -- wait
>               ! CQS2 -- wait
>               ! FLHC -- wait
>               ! FLQC -- wait
>               gz1oz0(i,j) = ( gz1oz0(i,j) * XICE(i,j) ) + ( (1.0-XICE(i,j)) * gz1oz0_sea(i,j) )
>               ! HFX  -- wait
>               ! LH   -- wait
>               mol(i,j)    = ( mol(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * mol_sea(i,j)    )
>               psih(i,j)   = ( psih(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * psih_sea(i,j)   )
>               psim(i,j)   = ( psim(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * psim_sea(i,j)   )
>               fh(i,j)    = ( fh(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * fh_sea(i,j)   )
>               fm(i,j)    = ( fm(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * fm_sea(i,j)   )
>               ! QFX  -- wait
>               ! QGH  -- wait
>               if ( XICE(i,j).GE. 0.5 ) regime(i,j) = regime_hold(i,j)
>               rmol(i,j)   = ( rmol(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * rmol_sea(i,j)   )
>               ust(i,j)    = ( ust(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * ust_sea(i,j)    )
>               wspd(i,j)   = ( wspd(i,j)   * XICE(i,j) ) + ( (1.0-XICE(i,j)) * wspd_sea(i,j)   )
>               zol(i,j)    = ( zol(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * zol_sea(i,j)    )
>               ! INTENT(OUT) --------------------------------------------------------------------
>               IF ( PRESENT ( CD ) ) THEN
>                  CD(i,j)     = ( CD(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CD_sea(i,j)     )
>               ENDIF
>               IF ( PRESENT ( CDA ) ) THEN
>                  CDA(i,j)     = ( CDA(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CDA_sea(i,j)     )
>               ENDIF
>               IF ( PRESENT ( CK ) ) THEN
>                  CK(i,j)     = ( CK(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CK_sea(i,j)     )
>               ENDIF
>               IF ( PRESENT ( CKA ) ) THEN
>                  CKA(i,j)     = ( CKA(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * CKA_sea(i,j)     )
>               ENDIF
>               q2(i,j)     = ( q2(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * q2_sea(i,j)     )
>               ! QSFC -- wait
>               t2(i,j)     = ( t2(i,j)     * XICE(i,j) ) + ( (1.0-XICE(i,j)) * t2_sea(i,j)     )
>               th2(i,j)    = ( th2(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * th2_sea(i,j)    )
>               u10(i,j)    = ( u10(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * u10_sea(i,j)    )
>               IF ( PRESENT ( USTM ) ) THEN
>                  USTM(i,j)    = ( USTM(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * USTM_sea(i,j)    )
>               ENDIF
>               v10(i,j)    = ( v10(i,j)    * XICE(i,j) ) + ( (1.0-XICE(i,j)) * v10_sea(i,j)    )
>            ENDIF
>         END DO
>      END DO
> !
> !         tsk(i,j) = tsk(i,j)*XICE(i,j) + (1.0-XICE(i,j))*TSK_SEA(i,j)
> !
>    END SUBROUTINE sfclayrev_seaice_wrapper
6094c6086
<                      sf_surface_physics             )
---
>                      sf_surface_physics                             )
