82,83c82,83
< #if defined(DM_PARALLEL) && !defined(STUBMPI)
<   INCLUDE "mpif.h" ! MSG TESTING
---
> #ifdef DM_PARALLEL
>   INCLUDE 'mpif.h'
297c297
<   REAL                  :: operate
---
> 
329,330c329
< ! temporary variable from MSG debugging
< REAL :: temp
---
> 
350,351d348
< ! PRINT *,'Starting GAD routine'
< 
353c350
<   yaw_rate = 2.0 !degrees per second
---
>   yaw_rate = 2.0 !degrees per second !0 ASW turn off yaw conrol
357c354
<   rpm     = 16.0
---
>   rpm     = 12.1
369,370c366,367
<   Rtwrt = 1.5 !NM radius is say 1.5 meters
<   Rtwrb = 2.0 !NM radius of tower at base
---
>   Rtwrt = 3.0 !NM radius is say 1.5 meters
>   Rtwrb = 3.0 !NM radius of tower at base
378,388c375,376
< 
< if (dum .LT. 0.0001) then
<    print*,'use dum variable to read files'
< else
<    ! print*,'dum variable is',dum
< endif
< 
< ! print*,'dum variable is equal to',dum,'after loop'
< ! print*,'check if i am reading the turbine files every time',' maybe use x_turbine variable (if equal to zero, then continue)',x_turbine(1)
<  
<   IF ( x_turbine(1) .EQ. 0.0 ) THEN !MS changed this from dum .EQ. 0.0 
---
>   
>   IF ( dum .EQ. 0.0 ) THEN
398d385
<               print*,'file reading',n,'turbines'
425d411
<                 ! PRINT *,'Reading file turbines(MSG)',x_turbine(i-1),y_turbine(i-1),'locs',hub_height(i-1),'hub height',rotor_diameter(i-1), 'diameter',blade_length(i-1),'blades',theta_turbine(i-1),'angle',cutinspd(i-1),'cutin',cutoutspd(i-1),'cutout'
453,455d438
<         cutinspd(1) = 3 !! Added by MSG
<         cutoutspd(1) = 25 !! Added by MSG
<         PRINT *,"Reading file turbines(MSG)",x_turbine(1),y_turbine(1),"locs"
506,508d488
< !print*,'CHECKING THAT VARIABLES ARE NON ZERO EVERY TIME A RESTART FILE INITIATES'
< !print*,x_turbine(:),y_turbine(:),'locs',hub_height(:),'hub height',rotor_diameter(:),'diameter',blade_length(:),'blades',theta_turbine(:),'angle',cutinspd(:),'cutin',cutoutspd(:),'cutout'
< 
513c493
<  ! PRINT*,'Starting part 1'
---
> 
589d568
<  !     print*,'YES, INFLOW LOCATION IS ON PATCH'
592c571
< !PRINT*,'Ending part 1'
---
> 
597c576
< !PRINT*,'Starting part 2'
---
> 
692c671
< !PRINT*,'Ending part 2'
---
> 
701d679
< !PRINT*,'Starting part 3'
708c686
< !PRINT*,'Starting part 3.1'
---
> 
716c694
< !PRINT*,'Starting part 3.2'
---
> 
717a696
> 
719c698
<  !     PRINT*,'inflow patch for turbine ',n
---
> 
764c743
< !PRINT*,'Starting part 3.3'
---
> 
773c752
< !PRINT*,'Starting part 3.4'
---
> 
782a762
> 
788a769
> 
792a774
> 
797,798d778
<       operate = 0.0
< 
802a783
> 
810d790
< !        print*,'v0t in part 4 for first time running GAD should be equal to v0n for each turbine',v0t(1,n),v0n(n)
827,828c807
<       
<       !!!!! Turbine yawing !!!!!!
---
> 
840c819,820
<         ELSE
---
>           !yawing(n) = 0 !ASW: turn off yaw
> 	    ELSE
859c839
<          ! PRINT *,"Turbine is yawing (MSG), theta turbine is",theta_turbine(n)
---
> 
889,890d868
<     !!!!! Turbine operation !!!!!!
<  !   print*,'Is the turbine on path?',turbine_on_patch(n),'1-> Yes, 0-> No'
894c872
<   !    print*,'current wind speed is:',v0t_avg,', cut in speed is:',cutinspd(n),', and cut out speed is:',cutoutspd(n)
---
> 
896,897c874
<       operate = 1.0
<       
---
> 
899d875
<    !   print*,'TURBINE SHOULD BE OPERATING'
906,912c882,888
<       ELSEIF (turbine_opt .EQ. 100) THEN
<          rpm = calc_rpm_dtu10( v0t_avg )
<          pitchdeg = calc_pitch_dtu10( v0t_avg )
<       ELSEIF (turbine_opt .EQ. 50) THEN
<          rpm   = calc_rpm_nrel5( v0t_avg )
<          pitchdeg = calc_pitch_nrel5( v0t_avg )
<       ENDIF
---
> 	  ELSEIF (turbine_opt .EQ. 10) THEN
>          rpm   = calc_rpm_dtu10( v0t_avg )
> 		 pitchdeg = calc_pitch_dtu10( v0t_avg )
> 	  ELSEIF (turbine_opt .EQ. 5) THEN
> 		 rpm   = calc_rpm_nrel5( v0t_avg )
> 		 pitchdeg = calc_pitch_nrel5( v0t_avg )
> 	  ENDIF
936a913
> 
984a962
> 
988a967
> 
1094,1095c1073
<                 if (turbine_opt .eq. 15) then 
<      !              print*,'radius',radius,'blade_length',blade_length(n),'rotor_diameter',rotor_diameter(n),'dscale',dscale
---
>                 if (turbine_opt .eq. 15) then
1097,1098c1075
<                                               radius, pitchdeg, rpm, dscale, cscale)
<      !              print*,'done u-component' 
---
>                                               radius, pitchdeg, rpm, dscale, cscale) 
1102,1108c1079,1085
<                 elseif (turbine_opt .eq. 100) then
<                    fnft = calc_fnft_dtu10( v0_u, rho, blades, blade_length(n),rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale,cscale)
<                 elseif (turbine_opt .eq. 50) then
<                    fnft = calc_fnft_nrel5( v0_u, rho, blades,blade_length(n),rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm,dscale,cscale)
<                 endif
---
> 				elseif (turbine_opt .eq. 10) then
> 				   fnft = calc_fnft_dtu10( v0_u, rho, blades, blade_length(n), rotor_diameter(n),   &
> 										      radius, pitchdeg, rpm, dscale, cscale)
> 				elseif (turbine_opt .eq. 5) then
> 				   fnft = calc_fnft_nrel5( v0_u, rho, blades, blade_length(n), rotor_diameter(n),   &
> 			                                 radius, pitchdeg, rpm, dscale, cscale) 
> 				endif
1178d1154
<       !                print*,'radius',radius,'blade_length',blade_length(n),'rotor_diameter',rotor_diameter(n),'dscale',dscale
1180,1181c1156
<                                               radius, pitchdeg, rpm, dscale, cscale)
<        !               print*,'done v-component'
---
>                                               radius, pitchdeg, rpm, dscale, cscale)  
1185,1191c1160,1166
<                    elseif (turbine_opt .eq. 100) then
<                       fnft = calc_fnft_dtu10( v0_v, rho, blades,blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                    elseif (turbine_opt .eq. 50) then
<                       fnft = calc_fnft_nrel5( v0_v, rho,blades, blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                    endif
---
> 				   elseif (turbine_opt .eq. 10) then
> 		 		      fnft = calc_fnft_dtu10( v0_v, rho, blades, blade_length(n), rotor_diameter(n),   &
> 		   		                              radius, pitchdeg, rpm, dscale, cscale)
> 				   elseif (turbine_opt .eq. 5) then
> 					  fnft = calc_fnft_nrel5( v0_v, rho, blades, blade_length(n), rotor_diameter(n),   &
> 			                                  radius, pitchdeg, rpm, dscale, cscale)
> 				   endif
1241d1215
<         !            print*,'radius',radius,'blade_length',blade_length(n),'rotor_diameter',rotor_diameter(n),'dscale',dscale
1243,1244c1217
<                                             radius, pitchdeg, rpm, dscale, cscale )
<          !           print*,'done w-component' 
---
>                                             radius, pitchdeg, rpm, dscale, cscale ) 
1248,1254c1221,1227
<                 elseif (turbine_opt .eq. 100) then
<                       fnft = calc_fnft_dtu10( v0_w, rho, blades,blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                 elseif (turbine_opt .eq. 50) then
<                       fnft = calc_fnft_nrel5( v0_w, rho,blades, blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                 endif
---
> 				 elseif (turbine_opt .eq. 10) then
> 					fnft = calc_fnft_dtu10( v0_w, rho, blades, blade_length(n), rotor_diameter(n), &
> 										    radius, pitchdeg, rpm, dscale, cscale )
> 				 elseif (turbine_opt .eq. 5) then
> 					fnft = calc_fnft_nrel5( v0_w, rho, blades, blade_length(n), rotor_diameter(n),   &
> 			                                radius, pitchdeg, rpm, dscale, cscale)
> 				 endif
1260,1262d1232
<                 if (isnan(fz)) then
<                         print*,'fz is NaN fn=',fn,'sin(tilt)=',sin(tilt),'ft=',ft,'cos(zeta)=',cos(zeta),'cos(tilt)=',cos(tilt)
<                 endif
1271c1241
<               temp = rw_tendf(i,k,j)
---
> 
1274,1276c1244
<                 if (isnan(rw_tendf(i,k,j))) then
<                         print*,'in phys/module_gen_act_disk mut(i,j)=',mut(i,j),'acc_w=',acc_w,'cnst=',cnst,'fz=',fz,'temp=',temp
<                 endif
---
> 
1313d1280
< !                   print*,'radius',radius,'blade_length',blade_length(n),'rotor_diameter',rotor_diameter(n),'dscale',dscale
1316d1282
<  !                  print*,'done c-component'
1320,1326c1286,1292
<                 elseif (turbine_opt .eq. 100) then
<                       fnft = calc_fnft_dtu10( v0_c, rho, blades,blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                 elseif (turbine_opt .eq. 50) then
<                       fnft = calc_fnft_nrel5( v0_c, rho,blades, blade_length(n), rotor_diameter(n),   &
<                                               radius, pitchdeg, rpm, dscale, cscale)
<                 endif
---
>   			    elseif (turbine_opt .eq. 10) then
> 				   fnft = calc_fnft_dtu10( v0_c, rho, blades, blade_length(n), rotor_diameter(n),   &
> 											  radius, pitchdeg, rpm, dscale, cscale)
> 				elseif (turbine_opt .eq. 5) then
> 				   fnft = calc_fnft_nrel5( v0_c, rho, blades, blade_length(n), rotor_diameter(n),   &
> 			                                  radius, pitchdeg, rpm, dscale, cscale)
> 				endif
1360,1365d1325
<     
<     if (operate .eq. 1.0) then
<  !      print*,'Turbine did start operating'            
<     elseif (operate .eq. 0.0) then
<   !     print*,'Turbine did not start operating'
<     endif
1368c1328
< !print*, 'finishing looping all turbines'
---
> 
1371d1330
< !  print*, 'try setting turb_power to zero (allocate a space for it)'
1374d1332
< !PRINT *,'GAD FINISHED, MSG MADE IT!!'
